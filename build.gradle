buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

repositories {
    maven {
        name = 'Lomeli Repo'
        url = "http://lomeli12.net/maven/"
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name = 'codechicken'
        url = "http://chickenbones.net/maven/"
    }
}

def loadProperties(String sourceFileName) {
    def config = new Properties()
        def propFile = new File(sourceFileName)
            if (propFile.canRead()) {
                config.load(new FileInputStream(propFile))
                    for (Map.Entry property in config) {
                        ext[property.key] = property.value;
                    }
            }
}

loadProperties 'build.properties'

dependencies {
    compile("mcp.mobius.waila:Waila:$waliaVersion") {
        exclude group: 'mcp.mobius.waila'
    }
    compile "com.pahimar.ee3:EquivalentExchange3:$mcVersion-$eeVersion:dev"
    compile "net.lomeli:LomLib:$lomlibVersion:dev"
    compile "codechicken:CodeChickenCore:$mcVersion-$cccVersion:dev"
    compile "codechicken:NotEnoughItems:$mcVersion-$neiVersion:dev"
    compile "codechicken:CodeChickenLib:$mcVersion-$cclVersion:dev"
}

group = "$modGroup"
archivesBaseName = "$modName"
version = "$releaseVersion"

minecraft {
    version = "$mcVersion-$forgeVersion-$mcVersion" // grab latest forge
    runDir = "eclipse"
}

processResources {
    exclude '**/xcf/**'

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude  'mcmod.info'
    }
}

jar {
	appendix = "$mcVersion"
    classifier = "universal"
}